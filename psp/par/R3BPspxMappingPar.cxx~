/********************************************************************************
 *    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    *
 *                                                                              *
 *              This software is distributed under the terms of the             * 
 *         GNU Lesser General Public Licence version 3 (LGPL) version 3,        *  
 *                  copied verbatim in the file "LICENSE"                       *
 ********************************************************************************/
// -------------------------------------------------------------------------
// -----               R3BPspxMappingPar source file                   -----
// -----                 Created 16/05/12  by I.Syndikus               -----
// -------------------------------------------------------------------------

#include "R3BPspxMappingPar.h"

#include "FairParamList.h"
#include "FairDetParIo.h"
#include "FairParIo.h"
#include "FairLogger.h"
#include "TString.h"
#include "TMath.h"


// -----   Standard constructor   ------------------------------------------
R3BPspxMappingPar::R3BPspxMappingPar(const char* name,
    const char* title,
    const char* context)
  : FairParGenericSet(name, title, context),
    pspxmappingparstrip(),
    pspxmappingparstation(-1)
{
  detName="Pspx";
  //  ftutdetdigipar= new TArrayF(10);
  //ftutdetdigipar= new TArrayF(10);
}
// -------------------------------------------------------------------------



// -----   Destructor   ----------------------------------------------------
R3BPspxMappingPar::~R3BPspxMappingPar()
{
  clear();

}
// -------------------------------------------------------------------------


// -----   Public method clear   -------------------------------------------
void R3BPspxMappingPar::clear()
{
  status = kFALSE;
  resetInputVersions();
}
// -------------------------------------------------------------------------

// -----   Public method printParams ---------------------------------------
void R3BPspxMappingPar::printparams()
{

  LOG(INFO) <<"Print"<<FairLogger::endl;
  LOG(INFO) << "pspxmappingparstation: " << pspxmappingparstation 
	    << FairLogger::endl;
  Int_t size =  pspxmappingparstrip.GetSize();
  LOG(INFO) <<"size: " << size << FairLogger::endl;
  for ( Int_t i=0; i< size; i++) {
    LOG(INFO) << i <<" :" << pspxmappingparstrip.GetAt(i) << FairLogger::endl;
  }

}
// -------------------------------------------------------------------------

void R3BPspxMappingPar::putParams(FairParamList* l)
{
  //   print();
  LOG(INFO) << "I am in R3BPspxMappingPar::putParams " 
	    << FairLogger::endl;
  if (!l) { return; }
  l->add("R3BPspxMappingStations", pspxmappingparstation);
  l->add("R3BPspxMappingStripsPerStation", pspxmappingparstrip);
  
}

//------------------------------------------------------

Bool_t R3BPspxMappingPar::getParams(FairParamList* l)
{
  //print();

  LOG(INFO) << "I am in R3BPspxMappingPar::getParams " 
	    << FairLogger::endl;

  if (!l) { return kFALSE; }
  if ( ! l->fill("R3BPspxMappingStations", &pspxmappingparstation) ) { return kFALSE; }
  pspxmappingparstrip.Set(pspxmappingparstation);

  if ( ! l->fill("R3BPspxMappingStripsPerStation", &pspxmappingparstrip) ) { return kFALSE; }

  return kTRUE;
}



ClassImp(R3BPspxMappingPar)
